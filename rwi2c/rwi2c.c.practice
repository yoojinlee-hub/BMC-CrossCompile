#include <stdio.h>
#include <linux/i2c-dev.h>
#include <stdlib.h>
#include <fcntl.h>
#include <sys/ioctl.h>
#include <unistd.h>
#include <errno.h>

int read_i2c(){
    int fd;
    int i2c_addresses[] = {0x48, 0x49, 0x4a, 0x4d}; // 여러 개의 I2C 주소
    char data[2];
    int T=0;

    // I2C 장치 파일 열기
    fd = open("/dev/i2c-6", O_RDWR);
    if (fd < 0) {
        printf("iw:Failed to open /dev/i2c-6\n");
        return 1;
    }

    for (int i = 0; i < sizeof(i2c_addresses) / sizeof(i2c_addresses[0]); i++) {
        // I2C 장치 주소 설정
        if (ioctl(fd, I2C_SLAVE, i2c_addresses[i]) < 0) {
            printf("iw:Failed to set I2C address(data from 0x%02X)... errno : %d\n",i2c_addresses[i], errno);
            close(fd);
            return 1;
        }

        // 데이터 읽기
        if (read(fd, data, sizeof(data)) != sizeof(data)) {
            printf("iw:Failed to read data (data from 0x%02X)... errno : %d\n",i2c_addresses[i], errno);
            close(fd);
            return 1;
        }

	T = ((data[0]&0xFF)<<4)|((data[1]>>4)&0x0F);
		
        // 읽은 데이터 출력
    printf("iw:Data from 0x%02X: %02X %02X\n", i2c_addresses[i], data[0], data[1]);
	printf("%d\n",T);
	printf("%d\n",T*625 );
    }

    // I2C 장치 파일 닫기
    close(fd);

    return 0;
}
int main() {
    int fd;
    int i2c_address = 0x48; // TMP175 또는 TMP75의 실제 I2C 주소
    int slave_address = 0b10010011;


    // I2C 장치 파일 열기 (쓰기 모드로 열어야 함)
    fd = open("/dev/i2c-6", O_WRONLY);
    if (fd < 0) {
        printf("Failed to open /dev/i2c-6 for writing\n");
        return 1;
    }else
	    printf("Success to open /dev/i2c-6\n");


        // I2C 장치 주소 설정
    if (ioctl(fd, I2C_SLAVE, i2c_address) < 0) {
        printf("Failed to set I2C address (writing to 0x%02X)... errno : %d\n", i2c_address,  errno);
        close(fd);
        return 1;
    }else
        printf("Success to set I2C address (writing to 0x%02X)...slaveaddr: %02X errno : %d\n", i2c_address, I2C_SLAVE, errno);



    // THIGH 레지스터 주소 설정 (예: 0x03은 THIGH 레지스터를 나타냄)
    unsigned char pointer_value = 0x03;
    if (write(fd, &pointer_value, sizeof(pointer_value)) != sizeof(pointer_value)) {
        printf("Failed to write Pointer register (0x%02X) for 0x%02X... errno : %d\n", pointer_value, i2c_address, errno);
        close(fd);
        return 1;
    }else
        printf("Success to write Pointer register (0x%02X) for 0x%02X... errno : %d\n", pointer_value, i2c_address, errno);
    


    // THIGH 레지스터에 12 비트 데이터 값 설정 (예: 0x0A12)
    char data_to_write[2];
    data_to_write[0] = 0xAA; // 상위 바이트
    data_to_write[1] = 0x00; // 하위 바이트
	
    char written[1];
    written[0] = (data_to_write[0] << 8) | data_to_write[1];
   // char *d = data_to_write[0] | data_to_write[1] ;

    int a =  write(fd, written, sizeof(written));
    if (a != sizeof(written)) {
        printf("Failed to write data (writing to 0x%02X)... errno : %d\n", i2c_address, errno);
        close(fd);
        return 1;
    }else{
	printf("Success to write sizeof(data_to_write):%d, result of write:%d\n", sizeof(written), a);
    }


    // 쓴 데이터 확인
    printf("Data written to 0x%02X: %02X %02X\n", i2c_address, data_to_write[0], data_to_write[1]);


   printf("==========================\n");
   printf("Real value\n");
   read_i2c();
   printf("done now..\n");
   close(fd);

    return 0;
}
